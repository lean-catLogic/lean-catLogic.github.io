"use strict";(self.webpackChunklean_catlogic=self.webpackChunklean_catlogic||[]).push([[923],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>y});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),s=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(d.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(t),u=r,y=p["".concat(d,".").concat(u)]||p[u]||m[u]||i;return t?a.createElement(y,o(o({ref:n},c),{},{components:t})):a.createElement(y,o({ref:n},c))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2843:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const i={},o="Cartesian Connectives",l={unversionedId:"deduction/deduction_cartesian",id:"deduction/deduction_cartesian",title:"Cartesian Connectives",description:"Typeclasses",source:"@site/docs/deduction/deduction_cartesian.md",sourceDirName:"deduction",slug:"/deduction/deduction_cartesian",permalink:"/docs/deduction/deduction_cartesian",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"The Deduction Typeclass",permalink:"/docs/deduction/"},next:{title:"Monadic Modality",permalink:"/docs/deduction/deduction_monadic"}},d={},s=[{value:"Typeclasses",id:"typeclasses",level:2},{value:"Top",id:"top",level:3},{value:"Logical And",id:"logical-and",level:3},{value:"Implication",id:"implication",level:3},{value:"Lemmas",id:"lemmas",level:2},{value:"<code>&amp;</code> internalizes two-formula hypotheses",id:"-internalizes-two-formula-hypotheses",level:3},{value:"One-formula <code>&amp;</code>-elimination",id:"one-formula--elimination",level:3},{value:"Implication is exponentiation",id:"implication-is-exponentiation",level:3},{value:"Weakening by a hypothesis",id:"weakening-by-a-hypothesis",level:3}],c={toc:s};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cartesian-connectives"},"Cartesian Connectives"),(0,r.kt)("h2",{id:"typeclasses"},"Typeclasses"),(0,r.kt)("h3",{id:"top"},"Top"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://leanprover-community.github.io/mathlib_docs/order/bounded_order.html#has_top"},(0,r.kt)("inlineCode",{parentName:"a"},"has_top")," Documentation")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="mathlib: order/bounded_order.lean"',title:'"mathlib:','order/bounded_order.lean"':!0},"@[notation_class] class has_top (\u03b1 : Type u) := (top : \u03b1)\nnotation `\u22a4` := has_top.top\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="deduction/deduction_cartesian.lean"',title:'"deduction/deduction_cartesian.lean"'},"class has_ltop (Form : Type) extends has_struct_derives Form := \n  (top : Form)\n  (truth : \u2200 {\u03a6 : Hyp}, derives \u03a6 top)\n\ninstance {Form : Type} [Der : has_ltop Form] : has_top Form := \u27e8 Der.top \u27e9\n")),(0,r.kt)("h3",{id:"logical-and"},"Logical And"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="deduction/deduction_cartesian.lean"',title:'"deduction/deduction_cartesian.lean"'},"class has_and (Form : Type) extends has_ltop Form :=\n  (and : Form \u2192 Form \u2192 Form)\n  (and_intro {\u03a6} {\u03c6 \u03c8 : Form}\n    : derives \u03a6 \u03c6 \u2192 derives \u03a6 \u03c8 \u2192 derives \u03a6 (and \u03c6 \u03c8))\n  (and_eliml {\u03a6} {\u03c6 \u03c8 : Form}\n    : derives \u03a6 (and \u03c6 \u03c8) \u2192 derives \u03a6 \u03c6)\n  (and_elimr {\u03a6} {\u03c6 \u03c8 : Form}\n    : derives \u03a6 (and \u03c6 \u03c8) \u2192 derives \u03a6 \u03c8)\n\ninfix `&`:79      := has_and.and\n")),(0,r.kt)("h3",{id:"implication"},"Implication"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="deduction/deduction_cartesian.lean"',title:'"deduction/deduction_cartesian.lean"'},"class has_impl (Form : Type) extends has_and Form :=\n  (impl : Form \u2192 Form \u2192 Form)\n  (impl_intro {\u03a6} (\u03c6) {\u03c8}\n    : derives (insert \u03c6 \u03a6) \u03c8 \u2192 derives \u03a6 (impl \u03c6 \u03c8))\n  (impl_elim {\u03a6} (\u03c6) {\u03c8}\n    : derives \u03a6 (impl \u03c6 \u03c8) \u2192 derives \u03a6 \u03c6 \u2192 derives \u03a6 \u03c8)\n\nnotation (name:= has_impl.impl) \u03c6 ` \u2283 `:80 \u03c8 := has_impl.impl \u03c6 \u03c8\n")),(0,r.kt)("h2",{id:"lemmas"},"Lemmas"),(0,r.kt)("h3",{id:"-internalizes-two-formula-hypotheses"},(0,r.kt)("inlineCode",{parentName:"h3"},"&")," internalizes two-formula hypotheses"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="deduction/deduction_cartesian.lean"',title:'"deduction/deduction_cartesian.lean"'},"lemma and_intro1 {Form : Type} [Der : has_and Form] {\u03c6 \u03c8 : Form} : \n    Der.derives (Der.insertHyp.insert \u03c8 {\u03c6}) (\u03c6&\u03c8) :=\n  begin\n    apply Der.and_intro,\n    apply Der.weak1,\n    apply derive_refl,\n    apply Der.hyp,\n    apply Der.inInsert,\n  end\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="deduction/deduction_cartesian.lean"',title:'"deduction/deduction_cartesian.lean"'},"lemma and_internal {Form : Type} [Der : has_and Form] {\u03c6 \u03c8 \u03b8: Form} : \n    (\u03c6 & \u03c8 \u22a2 \u03b8) \u2192 Der.derives (Der.insertHyp.insert \u03c8 {\u03c6}) \u03b8 :=\n  begin\n    assume h,\n    apply Der.derive_Trans (\u03c6 & \u03c8),\n    exact and_intro1,\n    exact h,\n  end\n")),(0,r.kt)("h3",{id:"one-formula--elimination"},"One-formula ",(0,r.kt)("inlineCode",{parentName:"h3"},"&"),"-elimination"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="deduction/deduction_cartesian.lean"',title:'"deduction/deduction_cartesian.lean"'},"lemma and_eliml1 {Form : Type} [Der : has_and Form] {\u03c6 \u03c8 : Form} : \n    \u03c6 & \u03c8 \u22a2 \u03c6 :=\n  begin\n    apply Der.and_eliml,\n    apply derive_refl,\n  end\nlemma and_elimr1 {Form : Type} [Der : has_and Form] {\u03c6 \u03c8 : Form} : \n    \u03c6 & \u03c8 \u22a2 \u03c8 :=\n  begin\n    apply Der.and_elimr,\n    apply derive_refl,\n  end\n")),(0,r.kt)("h3",{id:"implication-is-exponentiation"},"Implication is exponentiation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="deduction/deduction_cartesian.lean"',title:'"deduction/deduction_cartesian.lean"'},"lemma modus_ponens {Form : Type} [Der : has_impl Form] : \n    \u2200 {\u03c6 \u03c8 : Form}, (\u03c6 \u2283 \u03c8) & \u03c6 \u22a2 \u03c8 :=\n  begin\n    assume \u03c6 \u03c8,\n    apply Der.impl_elim \u03c6,\n    apply and_eliml1,\n    apply and_elimr1,\n  end\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="deduction/deduction_cartesian.lean"',title:'"deduction/deduction_cartesian.lean"'},"lemma impl_\u03b5 {Form : Type} [Der : has_impl Form] :\n    \u2200 {\u03c6 \u03c8 \u03b8 : Form}, \u03c6 & \u03c8 \u22a2 \u03b8  \u2192  \u03c6 \u22a2 \u03c8 \u2283 \u03b8 :=\n  begin\n    assume \u03c6 \u03c8 \u03b8 h,\n    apply Der.impl_intro,\n    apply Der.derive_Trans,\n    apply and_intro1,\n    exact h,\n  end\n")),(0,r.kt)("h3",{id:"weakening-by-a-hypothesis"},"Weakening by a hypothesis"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="deduction/deduction_cartesian.lean"',title:'"deduction/deduction_cartesian.lean"'},"lemma insert_trans {Form : Type} [Der : has_impl Form] {\u03a6} {\u03c6 \u03c8 : Form} :\n    (\u03c6 \u22a2 \u03c8) \u2192 Der.derives (Der.insertHyp.insert \u03c6 \u03a6) \u03c8 :=\n  begin\n    assume h,\n    apply Der.derive_Trans \u03c6,\n    apply Der.hyp,\n    apply Der.inInsert,\n    exact h,\n  end\n")))}p.isMDXComponent=!0}}]);