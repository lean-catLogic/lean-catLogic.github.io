"use strict";(self.webpackChunklean_catlogic=self.webpackChunklean_catlogic||[]).push([[914],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},y="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),y=p(r),f=a,h=y["".concat(l,".").concat(f)]||y[f]||u[f]||o;return r?n.createElement(h,i(i({ref:t},s),{},{components:r})):n.createElement(h,i({ref:t},s))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[y]="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7337:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>y,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={},i="Thin Categories",c={unversionedId:"categoryTheory/thin",id:"categoryTheory/thin",title:"Thin Categories",description:"by_thin Tactic",source:"@site/docs/categoryTheory/thin.md",sourceDirName:"categoryTheory",slug:"/categoryTheory/thin",permalink:"/docs/categoryTheory/thin",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cartesian Closed Categories",permalink:"/docs/categoryTheory/CCC"},next:{title:"The Deduction Typeclass",permalink:"/docs/deduction/"}},l={},p=[{value:"<code>by_thin</code> Tactic",id:"by_thin-tactic",level:2}],s={toc:p};function y(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"thin-categories"},"Thin Categories"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="categoryTheory/thin.lean"',title:'"categoryTheory/thin.lean"'},"class thin_cat (C : Type) extends category C :=\n  (K : \u2200 (X Y : C) (f g : X \u27f6 Y), f = g)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="categoryTheory/thin.lean"',title:'"categoryTheory/thin.lean"'},"def preorder_cat_full {C : Type} [C_struct : preorder C] {X Y : C} (F : X \u27f6 Y)\n  : \u2203 p : X \u2264 Y, F = hom_of_le p :=\n  \u27e8 le_of_hom F, by { symmetry, apply hom_of_le_le_of_hom}  \u27e9 \n\ndef from_preorder {P : Type} (P_struct : preorder P) : thin_cat P :=\n\u27e8 \n  begin \n    assume X Y F G,\n    cases (preorder_cat_full F) with p pF,\n    cases (preorder_cat_full G) with q qG,\n    rewrite pF, rewrite qG,\n  end \n\u27e9 \n")),(0,a.kt)("h2",{id:"by_thin-tactic"},(0,a.kt)("inlineCode",{parentName:"h2"},"by_thin")," Tactic"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="categoryTheory/thin.lean"',title:'"categoryTheory/thin.lean"'},"  meta def by_thin : tactic unit :=\n  `[ repeat{assume _}, repeat{ repeat{ apply funext, assume _},apply thin_cat.K }]\n")))}y.isMDXComponent=!0}}]);