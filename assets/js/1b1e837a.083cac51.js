"use strict";(self.webpackChunklean_catlogic=self.webpackChunklean_catlogic||[]).push([[71],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",C={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(r),y=a,d=u["".concat(c,".").concat(y)]||u[y]||C[y]||o;return r?n.createElement(d,i(i({ref:t},s),{},{components:r})):n.createElement(d,i({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=y;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},1226:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={},i="Cartesian Closed Categories",l={unversionedId:"categoryTheory/CCC",id:"categoryTheory/CCC",title:"Cartesian Closed Categories",description:"Categories in Lean's mathlib",source:"@site/docs/categoryTheory/CCC.md",sourceDirName:"categoryTheory",slug:"/categoryTheory/CCC",permalink:"/docs/categoryTheory/CCC",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Welcome!",permalink:"/docs/welcome"},next:{title:"Thin Categories",permalink:"/docs/categoryTheory/thin"}},c={},p=[{value:"Categories in Lean&#39;s mathlib",id:"categories-in-leans-mathlib",level:2},{value:"Finite-product categories",id:"finite-product-categories",level:2},{value:"Terminal object",id:"terminal-object",level:3},{value:"Binary products",id:"binary-products",level:3},{value:"Notations &amp; auxiliary definitions",id:"notations--auxiliary-definitions",level:3},{value:"Exponentials",id:"exponentials",level:2}],s={toc:p};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cartesian-closed-categories"},"Cartesian Closed Categories"),(0,a.kt)("h2",{id:"categories-in-leans-mathlib"},"Categories in Lean's mathlib"),(0,a.kt)("h2",{id:"finite-product-categories"},"Finite-product categories"),(0,a.kt)("h3",{id:"terminal-object"},"Terminal object"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="categoryTheory/CCC.lean"',title:'"categoryTheory/CCC.lean"'},"class FP_cat (C : Type u) extends category C :=\n  -- Terminal object\n  (unit : C) \n  (term : \u2200 X : C, X \u27f6 unit) \n  (unit_\u03b7 : \u2200 (X : C) (f : X \u27f6 unit), f = term X)\n  ...\n")),(0,a.kt)("h3",{id:"binary-products"},"Binary products"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="categoryTheory/CCC.lean"',title:'"categoryTheory/CCC.lean"'},"class FP_cat (C : Type u) extends category C :=\n  ...\n  (prod : C \u2192 C \u2192 C)\n  (pr1 : \u2200 {X Y : C}, (prod X Y) \u27f6 X)\n  (pr2 : \u2200 {X Y : C}, (prod X Y) \u27f6 Y)\n  (pair : \u2200 {X Y Z : C} (f : Z \u27f6 X) (g : Z \u27f6 Y), Z \u27f6 (prod X Y))\n  (prod_\u03b21 : \u2200 {X Y Z : C} {f : Z \u27f6 X} {g : Z \u27f6 Y}, (pair f g) \u226b pr1 = f)\n  (prod_\u03b22 : \u2200 {X Y Z : C} {f : Z \u27f6 X} {g : Z \u27f6 Y}, (pair f g) \u226b pr2 = g)\n  (prod_\u03b7 : \u2200 {X Y : C}, pair pr1 pr2 = \ud835\udfd9 (prod X Y))\n")),(0,a.kt)("h3",{id:"notations--auxiliary-definitions"},"Notations & auxiliary definitions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="categoryTheory/CCC.lean"',title:'"categoryTheory/CCC.lean"'},"instance {C : Type u} [FP_cat C] : has_one C := \n{\n    one := FP_cat.unit\n}\ninstance {C : Type u} [FP_cat C] : has_mul C := \n{\n    mul := \u03bb X Y, FP_cat.prod X Y\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="categoryTheory/CCC.lean"',title:'"categoryTheory/CCC.lean"'},"def homprod {C : Type u} [FP_cat C] {W X Y Z : C}\n   (f : W \u27f6 X) (g : Y \u27f6 Z) : W * Y \u27f6 X * Z :=\n   FP_cat.pair (FP_cat.pr1 \u226b f) (FP_cat.pr2 \u226b g)\nnotation (name:=homprod) f `***` g := homprod f g \n")),(0,a.kt)("h2",{id:"exponentials"},"Exponentials"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lean",metastring:'title="categoryTheory/CCC.lean"',title:'"categoryTheory/CCC.lean"'},"class CC_cat (C : Type u) extends FP_cat C := \n  (exp : C \u2192 C \u2192 C)\n  (eval : \u2200 {Y Z : C}, (exp Y Z) * Y \u27f6 Z)\n  (curry : \u2200 {X Y Z : C}, (X * Y \u27f6 Z) \u2192 (X \u27f6 (exp Y Z)))\n  (curry_\u03b2 : \u2200 {X Y Z : C} (u : X * Y \u27f6 Z), ((curry u) *** \ud835\udfd9 Y) \u226b eval = u)\n  (curry_\u03b7 : \u2200 {X Y Z : C} (v : X \u27f6 (exp Y Z)), curry((v *** \ud835\udfd9 Y) \u226b eval) = v)\n\nnotation (name:=exp) X `\u27f9` Y := CC_cat.exp X Y\n")))}u.isMDXComponent=!0}}]);